# Builder stage
FROM rust:1.71.1 AS builder

# the workdir in the container
WORKDIR /app
RUN apt update && apt install lld clang -y
# Copies all files from the current dir to the container image
COPY . .
ENV SQLX_OFFLINE true
RUN cargo build --release

# Runtime stage
FROM debian:bullseye-slim AS runtime

WORKDIR /app

# getting just the stuff we need to run the compiled code
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends openssl ca-certificates \
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

# we copy the binary we have built in the builder stage
COPY --from=builder /app/target/release/zero_2_prod zero_2_prod
COPY configuration configuration
ENV APP_ENVIRONMENT production
ENTRYPOINT [ "./zero_2_prod" ]
